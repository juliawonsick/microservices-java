spring.application.name=currency-service
server.port=8100 

spring.datasource.url=jdbc:postgresql://localhost/db_currency
spring.datasource.username=postgres
spring.datasource.password=J07012006a
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true 

spring.flyway.locations=classpath:db_migration

eureka.client.service-url.defaultZone:http://localhost:8761/eureka
eureka.instance.hostname=localhost
eureka.instance.prefer-ip-address=true
# Utilizar info do actuator 
eureka.client.healthcheck.enabled=true 
info.app.name=product-service
info.app.description="This is a sample eureka client application - product service"

management.endpoints.web.exposure.include=*
management.endpoint.info.access=unrestricted

spring.cloud.openfeign.circuitbreaker.enabled=true

# habilita o indicador de saude apara esta intancia de circuit breaker
resilience4j.circuitbreaker.instances.CurrencyBCClientgetCurrencyString.register-health-indicator=true
# número de chamadas na janela deslizante para calcular a taxa de falhas 
resilience4j.circuitbreaker.instances.CurrencyBCClientegetCurrencyString.slidingWindowSize=10
# número de chamadas antes de calcular a taxa de falhas 
resilience4j.circuitbreaker.instances.CurrencyBCClientegetCurrencyString.minimumNumberOfCalls=5
# percentual maximo de falas permitido antes de abrir o circuito 
resilience4j.circuitbreaker.instances.CurrencyBCClientegetCurrencyString.failureRateThreshold=50
# tempo que o circuito permanece aberto antes de ir para meio-aberto
resilience4j.circuitbreaker.instances.CurrencyBCClientegetCurrencyString.waitDurationInOpenState=10s
# número de chamadas permitidas no estado meio-aberto para testar
resilience4j.circuitbreaker.instances.CurrencyBCClientegetCurrencyString.permittedNumberOfCallsInHalfOpenState=3
# ativa a transição automatica de aberto para meio-aberto sem esperar chamada
resilience4j.circuitbreaker.instances.CurrencyBCClientegetCurrencyString.automaticTransitionFromOpenToHalfOpenEnabled=true




